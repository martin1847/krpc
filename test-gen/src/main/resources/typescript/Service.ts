/**
* GENERATED BY BTYX RPC GEN - LESS MODIFY BY HAND
* ${service.name}Service.ts  ${.now?iso_local}
*/

import {RpcResult,RpcService,Headers} from '@btyx/rpc';

<#if service.customerDtos?has_content>
import {<#list service.customerDtos as f>${f}${f?has_next?then(',','')}</#list>} from './${app}';
</#if>

<#if service.description?has_content>
///  ${service.description}
</#if>
export class ${service.name}Service{

	readonly pre = "${service.name}/";

	constructor(readonly rpcService: RpcService) {}
<#list service.methods?filter(f->! f.hidden)  as m>
	${m.doc}
	${m.name}(<#if m.arg??>req:${m.arg}, </#if>header?: Headers): Promise<RpcResult<${m.res}>>{
		return this.rpcService.async(this.pre+"${m.name}",req,header);
	}
</#list>

}
