image: "jcr.botaoyx.com/img/graalvm-gradle:7.21.2"
stages:
#  - build
#  - test
  - release
#  - deploy

variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  DEPLOY_NS: middleware
  DOCKER_MODULES: "demo-java-server demo-java-client"
  IMAGE_TAG: "$CI_COMMIT_REF_SLUG.$CI_COMMIT_SHORT_SHA"

#build:
#  stage: build
#  script:
#    - gradle build -Dquarkus.package.type=native
#
#release-maven:
#  stage: release
#  script:
#    - gradle publish
#
#release-image:
#  stage: release
#  image:
#    name: gcr.io/kaniko-project/executor:debug
#    entrypoint: [""]
#  variables:
#    KANIKO_CACHE_ARGS: "--cache=true --cache-copy-layers=true --cache-ttl=24h"
#    CONTEXT_PREFIX: "$KANIKO_CACHE_ARGS --dockerfile ./Dockerfile  --context $CI_PROJECT_DIR"
#  before_script:
#    - mkdir -p /kaniko/.docker
#    - echo "{\"auths\":{\"$CI_JCR\":{\"auth\":\"$(echo -n gitlab:${CI_JCR_PASSWORD} | base64)\"}}}" > /kaniko/.docker/config.json
#  script:
#    - |
#      for module in ${DOCKER_MODULES}
#      do
#        /kaniko/executor $CONTEXT_PREFIX/$module --destination $CI_JCR/img/$module:$IMAGE_TAG
#      done
#  rules:
#    - if: $CI_COMMIT_TAG
# if src/main/changed


# helm

release-helm:
  stage: release
  image:
    name: jcr.botaoyx.com/img/helm-kubectl:3.5.3
  script:
    - |
      for module in ${DOCKER_MODULES}
      do
        chart=./$module/src/main/helm
        yq e -i ".name= "$module"" $chart/Chart.yaml
        yq e -i ".appName= "$module" | .deployment.image.imageName = "$CI_JCR/img/$module:$IMAGE_TAG""  $chart/values.yaml
        helm template --debug  --dry-run "$chart"
        helm package "$chart" --version "1.0.$CI_PIPELINE_IID"
        curl -H "X-JFrog-Art-Api:$JCR_TOKEN" -T "./${module}-1.0.$CI_PIPELINE_IID.tgz" \
          "https://${CI_JCR}/artifactory/charts/${DEPLOY_NS}"
      done

#  except:
#    - tags


# deploy
# helm repo add charts https://jcr.botaoyx.com/artifactory/api/helm/charts \
#--username <USERNAME> --password <PASSWORD>

