syntax = "proto3";

//brew install protoc-gen-grpc-web
//import "google/protobuf/any.proto";
//import "google/rpc/code.proto";

//repeated google.protobuf.Any args = 2;

//https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/struct.proto
// protoc  --java_out=outj internal.proto
// --csharp_out=outc
// protoc internal.proto  --js_out=import_style=commonjs,binary:js --grpc-web_out=import_style=typescript,mode=grpcweb:js
// https://github.com/grpc/grpc-web#wire-format-mode

option csharp_namespace = "Com.Bt.Rpc.Internal";
option java_package = "com.bt.rpc.internal";
option java_multiple_files = true;

package com.bt.rpc.internal;


// service Mailer {
//   rpc Mailbox (stream InputMessage) returns (stream OutputMessage) {}
// }
// https://developers.google.com/protocol-buffers/docs/proto3#options
// option optimize_for = LITE_RUNTIME;
// https://github.com/protocolbuffers/protobuf/blob/master/java/lite.md


//service Grpc {
//  rpc call (InputProto) returns (OutputProto);
//}

enum SerialEnum {
    JSON = 0;
    HESSIAN = 1;
    MSG_PACK = 2;
    KRYO = 3;
    PSR = 4;
}


message InputProto {
  SerialEnum e = 1;
  oneof data {
  	string utf8 = 2;//for json , txt like serial
   	bytes bs = 3; // ByteString, others Serialization transfer by protobuf
  }
}

message OutputProto {
  //google.rpc.Code  see https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto
  int32 c = 1;
  //detail  message if there is a error ,otherwise  null 
  string m = 2;
  // payload data , oneof  string or bytes
  oneof data {
	string utf8 = 3;////for json , txt like serial
 	bytes bs = 4; // ByteString, others Serialization transfer by protobuf
  }
}
