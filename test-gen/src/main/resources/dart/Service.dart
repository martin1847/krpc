
// GENERATED BY BTYX RPC GEN - LESS MODIFY BY HAND
// ${serviceFile} ${.now?iso_local}


import 'package:btrpc/btrpc.dart';
import '${dtoFile}';
export '${dtoFile}';

<#if service.description?has_content>
///  ${service.description}
</#if>
class ${service.name}Service extends BaseService {

	${service.name}Service(ClientChannel channel, ServiceConfig? config)
	  : super(channel, APP_NAME, '${service.name}', config);

<#list service.methods?filter(f->! f.hidden)  as m>
	${m.doc}
	Future<RpcResult<${m.dartRes()}>> ${m.name}(<#if m.arg??>${m.arg} req, </#if>{Map<String, String>? headers, Duration? timeout}) {
		   return call${m.res.cust?then('','0')}('${m.name}', <#if m.res.cust><#if m.res.generic>(m) => ${m.res.rawType.name}.fromJson(m, (o) => <#if m.res.generics[0].cust> ${m.res.generics[0]}.fromJson(o as Map<String, dynamic>)<#else>o as ${m.res.generics[0]}</#if>) <#else>${m.res.rawType.name}.fromJson</#if> ,</#if>
           <#if m.arg??> req<#if m.arg.generic && m.arg.cust > , toJson: (${m.arg} p)=>BaseService.defaultToJson(p.toJson(BaseService.identity))</#if> <#else> null </#if>, headers: headers, timeout: timeout);
	}

</#list>

}

