// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: internal.proto

package tech.krpc.internal;

import java.io.IOException;
import java.io.InputStream;

import tech.krpc.common.proto.MiniCodedInputStream;
import tech.krpc.common.proto.StreamDecoder;
import lombok.extern.slf4j.Slf4j;

/**
 * Protobuf type {@code tech.krpc.internal.OutputProto}
 */
@Slf4j
public final class OutputProto
        //extends com.google.protobuf.GeneratedMessageV3
        implements
    // @@protoc_insertion_point(message_implements:tech.krpc.internal.OutputProto)
    OutputProtoOrBuilder {
private static final long serialVersionUID = 0L;
  // Use OutputProto.newBuilder() to construct.
  //private OutputProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
  //  super(builder);
  //}
  private OutputProto() {
    m_ = "";
  }

  //@Override
  //@SuppressWarnings({"unused"})
  //protected Object newInstance(
  //    UnusedPrivateParameter unused) {
  //  return new OutputProto();
  //}
  //
  //@Override
  //public final com.google.protobuf.UnknownFieldSet
  //getUnknownFields() {
  //  return this.unknownFields;
  //}
  public OutputProto(InputStream in) throws IOException {
    this();
    var size = in.available();
    if(size == 0){
      in.close();
      return;
    }
    log.debug("OutputProto from  InputStream size {}",size);
    // proto swell factor
    try (var input = new StreamDecoder(in, size)) {
    //try (var input = new StreamDecoder(in)){
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            c_ = input.readInt32();
            break;
          }
          case 18: {
            String s = input.readStringRequireUtf8();

            m_ = s;
            break;
          }
          case 26: {
            String s = input.readStringRequireUtf8();
            dataCase_ = 3;
            data_ = s;
            break;
          }
          case 34: {
            dataCase_ = 4;
            data_ = input.readBytes();
            break;
          }
          default: {
            //if (!parseUnknownField(
            //    input, unknownFields, extensionRegistry, tag)) {
              done = true;
            //}
            break;
          }
        }
      }
    //} catch (InvalidProtocolBufferException e) {
    //  throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new RuntimeException("StreamDecoder Out ProtocolBuffer Error!!!",e);
    }
  }
  //public static final com.google.protobuf.Descriptors.Descriptor
  //    getDescriptor() {
  //  return Internal.internal_static_com_bt_rpc_internal_OutputProto_descriptor;
  //}
  //
  //@Override
  //protected FieldAccessorTable
  //    internalGetFieldAccessorTable() {
  //  return Internal.internal_static_com_bt_rpc_internal_OutputProto_fieldAccessorTable
  //      .ensureFieldAccessorsInitialized(
  //          OutputProto.class, Builder.class);
  //}

  private int dataCase_ = 0;
  private Object data_;
  public enum DataCase
      //implements com.google.protobuf.Internal.EnumLite,
      //    InternalOneOfEnum
  {
    UTF8(3),
    BS(4),
    DATA_NOT_SET(0);
    private final int value;
    private DataCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static DataCase valueOf(int value) {
      return forNumber(value);
    }

    public static DataCase forNumber(int value) {
      switch (value) {
        case 3: return UTF8;
        case 4: return BS;
        case 0: return DATA_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public DataCase
  getDataCase() {
    return DataCase.forNumber(
        dataCase_);
  }

  public static final int C_FIELD_NUMBER = 1;
  private int c_;
  /**
   * <pre>
   *google.rpc.Code  see https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto
   * </pre>
   *
   * <code>int32 c = 1;</code>
   * @return The c.
   */
  @Override
  public int getC() {
    return c_;
  }

  public static final int M_FIELD_NUMBER = 2;
  private volatile String m_;
  /**
   * <pre>
   *detail  message if there is a error ,otherwise  null 
   * </pre>
   *
   * <code>string m = 2;</code>
   * @return The m.
   */
  @Override
  public String getM() {
    return m_;
    //if (ref instanceof String) {
    //  return (String) ref;
    //} else {
    //  com.google.protobuf.ByteString bs =
    //      (com.google.protobuf.ByteString) ref;
    //  String s = bs.toStringUtf8();
    //  m_ = s;
    //  return s;
    //}
  }
  ///**
  // * <pre>
  // *detail  message if there is a error ,otherwise  null
  // * </pre>
  // *
  // * <code>string m = 2;</code>
  // * @return The bytes for m.
  // */
  //@Override
  //public com.google.protobuf.ByteString
  //    getMBytes() {
  //  Object ref = m_;
  //  if (ref instanceof String) {
  //    com.google.protobuf.ByteString b =
  //        com.google.protobuf.ByteString.copyFromUtf8(
  //            (String) ref);
  //    m_ = b;
  //    return b;
  //  } else {
  //    return (com.google.protobuf.ByteString) ref;
  //  }
  //}

  public static final int UTF8_FIELD_NUMBER = 3;
  /**
   * <pre>
   *&#47;/for json , txt like serial
   * </pre>
   *
   * <code>string utf8 = 3;</code>
   * @return Whether the utf8 field is set.
   */
  public boolean hasUtf8() {
    return dataCase_ == 3;
  }
  /**
   * <pre>
   *&#47;/for json , txt like serial
   * </pre>
   *
   * <code>string utf8 = 3;</code>
   * @return The utf8.
   */
  public String getUtf8() {
    if (dataCase_ == 3) {
      return (String)  data_;
    }
    return "";
    //if (ref instanceof String) {
    //  return (String) ref;
    //} else {
    //  com.google.protobuf.ByteString bs =
    //      (com.google.protobuf.ByteString) ref;
    //  String s = bs.toStringUtf8();
    //  if (dataCase_ == 3) {
    //    data_ = s;
    //  }
    //  return s;
    //}
  }
  /**
   * <pre>
   *&#47;/for json , txt like serial
   * </pre>
   *
   * <code>string utf8 = 3;</code>
   * @return The bytes for utf8.
   */
  //public com.google.protobuf.ByteString
  //    getUtf8Bytes() {
  //  Object ref = "";
  //  if (dataCase_ == 3) {
  //    ref = data_;
  //  }
  //  if (ref instanceof String) {
  //    com.google.protobuf.ByteString b =
  //        com.google.protobuf.ByteString.copyFromUtf8(
  //            (String) ref);
  //    if (dataCase_ == 3) {
  //      data_ = b;
  //    }
  //    return b;
  //  } else {
  //    return (com.google.protobuf.ByteString) ref;
  //  }
  //}

  public static final int BS_FIELD_NUMBER = 4;
  /**
   * <pre>
   * ByteString, others Serialization transfer by protobuf
   * </pre>
   *
   * <code>bytes bs = 4;</code>
   * @return Whether the bs field is set.
   */
  @Override
  public boolean hasBs() {
    return dataCase_ == 4;
  }
  /**
   * <pre>
   * ByteString, others Serialization transfer by protobuf
   * </pre>
   *
   * <code>bytes bs = 4;</code>
   * @return The bs.
   */
  @Override
  public byte[] getBs() {
    if (dataCase_ == 4) {
      return (byte[] ) data_;
    }
    return MiniCodedInputStream.EMPTY_BYTE_ARRAY;
  }

  //private byte memoizedIsInitialized = -1;
  //public final boolean isInitialized() {
  //  byte isInitialized = memoizedIsInitialized;
  //  if (isInitialized == 1) return true;
  //  if (isInitialized == 0) return false;
  //
  //  memoizedIsInitialized = 1;
  //  return true;
  //}

  //@Override
  //public void writeTo(com.google.protobuf.CodedOutputStream output)
  //                    throws java.io.IOException {
  //  if (c_ != 0) {
  //    output.writeInt32(1, c_);
  //  }
  //  if (!getMBytes().isEmpty()) {
  //    com.google.protobuf.GeneratedMessageV3.writeString(output, 2, m_);
  //  }
  //  if (dataCase_ == 3) {
  //    com.google.protobuf.GeneratedMessageV3.writeString(output, 3, data_);
  //  }
  //  if (dataCase_ == 4) {
  //    output.writeBytes(
  //        4, (com.google.protobuf.ByteString) data_);
  //  }
  //  unknownFields.writeTo(output);
  //}

  //@Override
  //public int getSerializedSize() {
  //  int size = memoizedSize;
  //  if (size != -1) return size;
  //
  //  size = 0;
  //  if (c_ != 0) {
  //    size += com.google.protobuf.CodedOutputStream
  //      .computeInt32Size(1, c_);
  //  }
  //  if (!getMBytes().isEmpty()) {
  //    size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, m_);
  //  }
  //  if (dataCase_ == 3) {
  //    size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, data_);
  //  }
  //  if (dataCase_ == 4) {
  //    size += com.google.protobuf.CodedOutputStream
  //      .computeBytesSize(
  //          4, (com.google.protobuf.ByteString) data_);
  //  }
  //  size += unknownFields.getSerializedSize();
  //  memoizedSize = size;
  //  return size;
  //}
  //
  //@Override
  //public boolean equals(final Object obj) {
  //  if (obj == this) {
  //   return true;
  //  }
  //  if (!(obj instanceof OutputProto)) {
  //    return super.equals(obj);
  //  }
  //  OutputProto other = (OutputProto) obj;
  //
  //  if (getC()
  //      != other.getC()) return false;
  //  if (!getM()
  //      .equals(other.getM())) return false;
  //  if (!getDataCase().equals(other.getDataCase())) return false;
  //  switch (dataCase_) {
  //    case 3:
  //      if (!getUtf8()
  //          .equals(other.getUtf8())) return false;
  //      break;
  //    case 4:
  //      if (!getBs()
  //          .equals(other.getBs())) return false;
  //      break;
  //    case 0:
  //    default:
  //  }
  //  if (!unknownFields.equals(other.unknownFields)) return false;
  //  return true;
  //}
  //
  //@Override
  //public int hashCode() {
  //  if (memoizedHashCode != 0) {
  //    return memoizedHashCode;
  //  }
  //  int hash = 41;
  //  hash = (19 * hash) + getDescriptor().hashCode();
  //  hash = (37 * hash) + C_FIELD_NUMBER;
  //  hash = (53 * hash) + getC();
  //  hash = (37 * hash) + M_FIELD_NUMBER;
  //  hash = (53 * hash) + getM().hashCode();
  //  switch (dataCase_) {
  //    case 3:
  //      hash = (37 * hash) + UTF8_FIELD_NUMBER;
  //      hash = (53 * hash) + getUtf8().hashCode();
  //      break;
  //    case 4:
  //      hash = (37 * hash) + BS_FIELD_NUMBER;
  //      hash = (53 * hash) + getBs().hashCode();
  //      break;
  //    case 0:
  //    default:
  //  }
  //  hash = (29 * hash) + unknownFields.hashCode();
  //  memoizedHashCode = hash;
  //  return hash;
  //}
  //
  //public static OutputProto parseFrom(
  //    java.nio.ByteBuffer data)
  //    throws com.google.protobuf.InvalidProtocolBufferException {
  //  return PARSER.parseFrom(data);
  //}
  //public static OutputProto parseFrom(
  //    java.nio.ByteBuffer data,
  //    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
  //    throws com.google.protobuf.InvalidProtocolBufferException {
  //  return PARSER.parseFrom(data, extensionRegistry);
  //}
  //public static OutputProto parseFrom(
  //    com.google.protobuf.ByteString data)
  //    throws com.google.protobuf.InvalidProtocolBufferException {
  //  return PARSER.parseFrom(data);
  //}
  //public static OutputProto parseFrom(
  //    com.google.protobuf.ByteString data,
  //    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
  //    throws com.google.protobuf.InvalidProtocolBufferException {
  //  return PARSER.parseFrom(data, extensionRegistry);
  //}
  //public static OutputProto parseFrom(byte[] data)
  //    throws com.google.protobuf.InvalidProtocolBufferException {
  //  return PARSER.parseFrom(data);
  //}
  //public static OutputProto parseFrom(
  //    byte[] data,
  //    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
  //    throws com.google.protobuf.InvalidProtocolBufferException {
  //  return PARSER.parseFrom(data, extensionRegistry);
  //}
  //public static OutputProto parseFrom(java.io.InputStream input)
  //    throws java.io.IOException {
  //  return com.google.protobuf.GeneratedMessageV3
  //      .parseWithIOException(PARSER, input);
  //}
  //public static OutputProto parseFrom(
  //    java.io.InputStream input,
  //    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
  //    throws java.io.IOException {
  //  return com.google.protobuf.GeneratedMessageV3
  //      .parseWithIOException(PARSER, input, extensionRegistry);
  //}
  //public static OutputProto parseDelimitedFrom(java.io.InputStream input)
  //    throws java.io.IOException {
  //  return com.google.protobuf.GeneratedMessageV3
  //      .parseDelimitedWithIOException(PARSER, input);
  //}
  //public static OutputProto parseDelimitedFrom(
  //    java.io.InputStream input,
  //    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
  //    throws java.io.IOException {
  //  return com.google.protobuf.GeneratedMessageV3
  //      .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  //}
  //public static OutputProto parseFrom(
  //    com.google.protobuf.CodedInputStream input)
  //    throws java.io.IOException {
  //  return com.google.protobuf.GeneratedMessageV3
  //      .parseWithIOException(PARSER, input);
  //}
  //public static OutputProto parseFrom(
  //    com.google.protobuf.CodedInputStream input,
  //    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
  //    throws java.io.IOException {
  //  return com.google.protobuf.GeneratedMessageV3
  //      .parseWithIOException(PARSER, input, extensionRegistry);
  //}
  //
  //@Override
  //public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return new Builder();
  }
  //public static Builder newBuilder(OutputProto prototype) {
  //  return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  //}
  //@Override
  //public Builder toBuilder() {
  //  return this == DEFAULT_INSTANCE
  //      ? new Builder() : new Builder().mergeFrom(this);
  //}
  //
  //@Override
  //protected Builder newBuilderForType(
  //    BuilderParent parent) {
  //  Builder builder = new Builder(parent);
  //  return builder;
  //}
  /**
   * Protobuf type {@code tech.krpc.internal.OutputProto}
   */
  public static final class Builder
      // extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
          implements
      // @@protoc_insertion_point(builder_implements:tech.krpc.internal.OutputProto)
      OutputProtoOrBuilder.OutBuilder {
    //public static final com.google.protobuf.Descriptors.Descriptor
    //    getDescriptor() {
    //  return Internal.internal_static_com_bt_rpc_internal_OutputProto_descriptor;
    //}
    //
    //@Override
    //protected FieldAccessorTable
    //    internalGetFieldAccessorTable() {
    //  return Internal.internal_static_com_bt_rpc_internal_OutputProto_fieldAccessorTable
    //      .ensureFieldAccessorsInitialized(
    //          OutputProto.class, Builder.class);
    //}

    // Construct using tech.krpc.internal.OutputProto.newBuilder()

    private Builder(){}
    //    BuilderParent parent) {
    //  super(parent);
    //  maybeForceBuilderInitialization();
    //}
    //private void maybeForceBuilderInitialization() {
    //  if (com.google.protobuf.GeneratedMessageV3
    //          .alwaysUseFieldBuilders) {
    //  }
    //}
    //@Override
    public Builder clear() {
      //super.clear();
      c_ = 0;

      m_ = "";

      dataCase_ = 0;
      data_ = null;
      return this;
    }

    //@Override
    //public com.google.protobuf.Descriptors.Descriptor
    //    getDescriptorForType() {
    //  return Internal.internal_static_com_bt_rpc_internal_OutputProto_descriptor;
    //}
    //
    //@Override
    //public OutputProto getDefaultInstanceForType() {
    //  return OutputProto.getDefaultInstance();
    //}
    //
    //@Override
    public OutputProto build() {
      OutputProto result = new OutputProto();
      result.c_ = c_;
      result.m_ = m_;
      if (dataCase_ == 3) {
        result.data_ = data_;
      }
      if (dataCase_ == 4) {
        result.data_ = data_;
      }
      result.dataCase_ = dataCase_;
      //onBuilt();
      return result;
    }
    private int dataCase_ = 0;
    private Object data_;
    //public DataCase
    //    getDataCase() {
    //  return DataCase.forNumber(
    //      dataCase_);
    //}

    public Builder clearData() {
      dataCase_ = 0;
      data_ = null;
      return this;
    }


    private int c_ ;
    /**
     * <pre>
     *google.rpc.Code  see https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto
     * </pre>
     *
     * <code>int32 c = 1;</code>
     * @param value The c to set.
     * @return This builder for chaining.
     */
    public Builder setC(int value) {
      
      c_ = value;
      return this;
    }
    ///**
    // * <pre>
    // *google.rpc.Code  see https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto
    // * </pre>
    // *
    // * <code>int32 c = 1;</code>
    // * @return This builder for chaining.
    // */
    //public Builder clearC() {
    //
    //  c_ = 0;
    //  return this;
    //}

    private String m_ = "";
    ///**
    // * <pre>
    // *detail  message if there is a error ,otherwise  null
    // * </pre>
    // *
    // * <code>string m = 2;</code>
    // * @return The m.
    // */
    //public String getM() {
    //  Object ref = m_;
    //  if (!(ref instanceof String)) {
    //    com.google.protobuf.ByteString bs =
    //        (com.google.protobuf.ByteString) ref;
    //    String s = bs.toStringUtf8();
    //    m_ = s;
    //    return s;
    //  } else {
    //    return (String) ref;
    //  }
    //}
    /**
     * <pre>
     *detail  message if there is a error ,otherwise  null 
     * </pre>
     *
     * <code>string m = 2;</code>
     * @param value The m to set.
     * @return This builder for chaining.
     */
    public Builder setM(
            String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      m_ = value;
      return this;
    }
    ///**
    // * <pre>
    // *detail  message if there is a error ,otherwise  null
    // * </pre>
    // *
    // * <code>string m = 2;</code>
    // * @return This builder for chaining.
    // */
    //public Builder clearM() {
    //
    //  m_ = getDefaultInstance().getM();
    //  onChanged();
    //  return this;
    //}

    ///**
    // * <pre>
    // *&#47;/for json , txt like serial
    // * </pre>
    // *
    // * <code>string utf8 = 3;</code>
    // * @return Whether the utf8 field is set.
    // */
    //@Override
    //public boolean hasUtf8() {
    //  return dataCase_ == 3;
    //}
    ///**
    // * <pre>
    // *&#47;/for json , txt like serial
    // * </pre>
    // *
    // * <code>string utf8 = 3;</code>
    // * @return The utf8.
    // */
    //@Override
    //public String getUtf8() {
    //  Object ref = "";
    //  if (dataCase_ == 3) {
    //    ref = data_;
    //  }
    //  if (!(ref instanceof String)) {
    //    com.google.protobuf.ByteString bs =
    //        (com.google.protobuf.ByteString) ref;
    //    String s = bs.toStringUtf8();
    //    if (dataCase_ == 3) {
    //      data_ = s;
    //    }
    //    return s;
    //  } else {
    //    return (String) ref;
    //  }
    //}
    /**
     * <pre>
     *&#47;/for json , txt like serial
     * </pre>
     *
     * <code>string utf8 = 3;</code>
     * @param value The utf8 to set.
     * @return This builder for chaining.
     */
    public Builder setUtf8(
            String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      dataCase_ = 3;
      data_ = value;
      return this;
    }
    /**
     * <pre>
     *&#47;/for json , txt like serial
     * </pre>
     *
     * <code>string utf8 = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearUtf8() {
      if (dataCase_ == 3) {
        dataCase_ = 0;
        data_ = null;
        //onChanged();
      }
      return this;
    }

    /**
     * <pre>
     * ByteString, others Serialization transfer by protobuf
     * </pre>
     *
     * <code>bytes bs = 4;</code>
     * @param value The bs to set.
     * @return This builder for chaining.
     */
    public Builder setBs(byte[] value) {
      if (value == null) {
        throw new NullPointerException();
      }
      dataCase_ = 4;
      data_ = value;
      return this;
    }
    /**
     * <pre>
     * ByteString, others Serialization transfer by protobuf
     * </pre>
     *
     * <code>bytes bs = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearBs() {
      if (dataCase_ == 4) {
        dataCase_ = 0;
        data_ = null;
      }
      return this;
    }


    // @@protoc_insertion_point(builder_scope:tech.krpc.internal.OutputProto)
  }

  // @@protoc_insertion_point(class_scope:tech.krpc.internal.OutputProto)
  //private static final OutputProto DEFAULT_INSTANCE;
  //static {
  //  DEFAULT_INSTANCE = new OutputProto();
  //}
  //
  //public static OutputProto getDefaultInstance() {
  //  return DEFAULT_INSTANCE;
  //}
  //
  //private static final com.google.protobuf.Parser<OutputProto>
  //    PARSER = new com.google.protobuf.AbstractParser<OutputProto>() {
  //  @Override
  //  public OutputProto parsePartialFrom(
  //      com.google.protobuf.CodedInputStream input,
  //      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
  //      throws com.google.protobuf.InvalidProtocolBufferException {
  //    return new OutputProto(input, extensionRegistry);
  //  }
  //};
  //
  //public static OutputProto parser(InputStream in) {
  //  return PARSER;
  //}
  //
  //@Override
  //public com.google.protobuf.Parser<OutputProto> getParserForType() {
  //  return PARSER;
  //}
  //
  //@Override
  //public OutputProto getDefaultInstanceForType() {
  //  return DEFAULT_INSTANCE;
  //}

}

