// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "internal.proto" (syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { Grpc } from "./internal";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { OutputProto } from "./internal";
import type { InputProto } from "./internal";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service Grpc
 */
export interface IGrpcClient {
    /**
     * @generated from protobuf rpc: call(InputProto) returns (OutputProto);
     */
    call(input: InputProto, options?: RpcOptions): UnaryCall<InputProto, OutputProto>;
}
/**
 * @generated from protobuf service Grpc
 */
export class GrpcClient implements IGrpcClient, ServiceInfo {
    typeName = Grpc.typeName;
    methods = Grpc.methods;
    options = Grpc.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: call(InputProto) returns (OutputProto);
     */
    call(input: InputProto, options?: RpcOptions): UnaryCall<InputProto, OutputProto> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<InputProto, OutputProto>("unary", this._transport, method, opt, input);
    }
}
